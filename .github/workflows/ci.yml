# -------------------------------------------------------------------
# ------------------------------- WARNING ---------------------------
# -------------------------------------------------------------------
#
# This file was automatically generated by gh-workflows using the
# gh-workflow-gen bin. You should add and commit this file to your
# git repository. **DO NOT EDIT THIS FILE BY HAND!** Any manual changes
# will be lost if the file is regenerated.
#
# To make modifications, update your `build.rs` configuration to adjust
# the workflow description as needed, then regenerate this file to apply
# those changes.
#
# -------------------------------------------------------------------
# ----------------------------- END WARNING -------------------------
# -------------------------------------------------------------------

name: Build and Test
env:
  RUSTFLAGS: -Dwarnings
on:
  pull_request_target:
    types:
    - opened
    - synchronize
    - reopened
    branches:
    - main
  push:
    branches:
    - main
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        token: '{{ secrets.GITHUB_TOKEN }}'
        fetch-depth: '0'
    - name: Setup Rust Toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable, nightly
        components: clippy, rustfmt
    - id: check-labels
      name: Check PR Labels
      uses: actions-ecosystem/action-get-labeled@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: false
    - name: Cargo Test
      run: cargo test --all-features --workspace
    - name: Cargo Fmt
      if: '!contains(steps.Check_PR_Labels.outputs.labels, ''ci: lintfix'')'
      run: cargo +nightly fmt --check
    - name: Cargo Fmt
      if: 'contains(steps.Check_PR_Labels.outputs.labels, ''ci: lintfix'')'
      run: cargo +nightly fmt --all
    - name: Cargo Clippy
      if: '!contains(steps.Check_PR_Labels.outputs.labels, ''ci: lintfix'')'
      run: cargo +nightly clippy --all-features --workspace -- -D warnings
    - name: Cargo Clippy
      if: 'contains(steps.Check_PR_Labels.outputs.labels, ''ci: lintfix'')'
      run: cargo +nightly clippy --fix --allow-dirty
    - name: Commit and Push Fixes
      if: 'contains(steps.Check_PR_Labels.outputs.labels, ''ci: lintfix'')'
      run: git config user.name 'github-actions[bot]' && git config user.email 'github-actions[bot]@users.noreply.github.com' && git add . && git commit -m 'Apply lint fixes (fmt + clippy)' && git push origin HEAD:${{ github.event.pull_request.head.ref }}
  release:
    needs: build
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      packages: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - name: Release Plz
      uses: MarcoIeni/release-plz-action@v0.5
